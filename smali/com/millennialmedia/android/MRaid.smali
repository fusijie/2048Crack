.class Lcom/millennialmedia/android/MRaid;
.super Ljava/lang/Object;
.source "MRaid.java"


# annotations
.annotation system Ldalvik/annotation/MemberClasses;
    value = {
        Lcom/millennialmedia/android/MRaid$Finished;
    }
.end annotation


# static fields
.field private static final KEY_MMJS_URL:Ljava/lang/String; = "KEY_MMJS_URL"

.field private static final MMJS_1_5_PART1:Ljava/lang/String; = ""

.field private static final MMJS_1_5_PART2:Ljava/lang/String; = ""

.field static final MRAID_JS_FILE_NAME:Ljava/lang/String; = "mraid.js"

.field private static final MRAID_JS_REPLACE_HEAD_PATTERN:Ljava/lang/String; = "<head>"

.field static final MRAID_JS_REPLACE_IDENTIFIER:Ljava/lang/String; = "<script src=\"mraid.js\"></script>"

.field private static final MRAID_JS_REPLACE_PATTERN:Ljava/lang/String; = "<script.*src=[\"|\']mraid\\.js[\"|\']"

.field private static final ORIGINAL_MMJS_URL:Ljava/lang/String; = "http://cdn.millennialmedia.com/mmjs/v1.4/mm.js"

.field static final STATE_DEFAULT:Ljava/lang/String; = "default"

.field static final STATE_EXPANDED:Ljava/lang/String; = "expanded"

.field static final STATE_HIDDEN:Ljava/lang/String; = "hidden"

.field static final STATE_LOADING:Ljava/lang/String; = "loading"

.field private static final TAG:Ljava/lang/String; = "MRaid"

.field static finishedRef:Ljava/lang/ref/WeakReference;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/lang/ref/WeakReference",
            "<",
            "Lcom/millennialmedia/android/MRaid$Finished;",
            ">;"
        }
    .end annotation
.end field


# direct methods
.method constructor <init>()V
    .locals 0

    .prologue
    .line 31
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    .line 93
    return-void
.end method

.method static downloadMraidJs(Landroid/content/Context;Ljava/lang/String;)V
    .locals 1
    .parameter "context"
    .parameter "url"

    .prologue
    .line 107
    invoke-static {p1}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    move-result v0

    if-nez v0, :cond_0

    .line 108
    new-instance v0, Lcom/millennialmedia/android/MRaid$1;

    invoke-direct {v0, p1, p0}, Lcom/millennialmedia/android/MRaid$1;-><init>(Ljava/lang/String;Landroid/content/Context;)V

    invoke-static {v0}, Lcom/millennialmedia/android/Utils$ThreadUtils;->execute(Ljava/lang/Runnable;)V

    .line 142
    :cond_0
    return-void
.end method

.method static getMMJSStats(Landroid/content/Context;)Ljava/lang/String;
    .locals 22
    .parameter "context"

    .prologue
    .line 170
    invoke-static/range {p0 .. p0}, Lcom/millennialmedia/android/MRaid;->hasMraidLocally(Landroid/content/Context;)Z

    move-result v17

    if-nez v17, :cond_0

    .line 171
    const-string v17, "No MMJS Downloaded!"

    .line 235
    :goto_0
    return-object v17

    .line 173
    :cond_0
    invoke-static/range {p0 .. p0}, Lcom/millennialmedia/android/MRaid;->getMRaidJsFile(Landroid/content/Context;)Ljava/io/File;

    move-result-object v13

    .line 174
    .local v13, mmjs:Ljava/io/File;
    const/4 v14, 0x0

    .line 176
    .local v14, reader:Ljava/io/BufferedReader;
    const/4 v6, 0x0

    .line 177
    .local v6, fileStream:Ljava/io/FileInputStream;
    const-string v12, ""

    .line 178
    .local v12, md5Hash:Ljava/lang/String;
    const-string v2, ""

    .line 179
    .local v2, buildDate:Ljava/lang/String;
    const-string v16, ""

    .line 181
    .local v16, version:Ljava/lang/String;
    :try_start_0
    new-instance v7, Ljava/io/FileInputStream;

    invoke-direct {v7, v13}, Ljava/io/FileInputStream;-><init>(Ljava/io/File;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    .line 183
    .end local v6           #fileStream:Ljava/io/FileInputStream;
    .local v7, fileStream:Ljava/io/FileInputStream;
    :try_start_1
    invoke-virtual {v13}, Ljava/io/File;->length()J

    move-result-wide v17

    move-wide/from16 v0, v17

    long-to-int v0, v0

    move/from16 v17, v0

    move/from16 v0, v17

    new-array v3, v0, [B

    .line 184
    .local v3, contents:[B
    invoke-virtual {v7, v3}, Ljava/io/FileInputStream;->read([B)I

    .line 186
    const-string v17, "MD5"

    invoke-static/range {v17 .. v17}, Ljava/security/MessageDigest;->getInstance(Ljava/lang/String;)Ljava/security/MessageDigest;

    move-result-object v11

    .line 187
    .local v11, md:Ljava/security/MessageDigest;
    invoke-virtual {v11, v3}, Ljava/security/MessageDigest;->digest([B)[B

    move-result-object v8

    .line 188
    .local v8, hashBytes:[B
    invoke-static {v8}, Lcom/millennialmedia/android/MMSDK;->byteArrayToString([B)Ljava/lang/String;

    move-result-object v12

    .line 190
    invoke-static/range {p0 .. p0}, Lcom/millennialmedia/android/MRaid;->getMRaidJsFile(Landroid/content/Context;)Ljava/io/File;

    move-result-object v13

    .line 191
    new-instance v15, Ljava/io/BufferedReader;

    new-instance v17, Ljava/io/FileReader;

    move-object/from16 v0, v17

    invoke-direct {v0, v13}, Ljava/io/FileReader;-><init>(Ljava/io/File;)V

    move-object/from16 v0, v17

    invoke-direct {v15, v0}, Ljava/io/BufferedReader;-><init>(Ljava/io/Reader;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_1} :catch_4

    .line 193
    .end local v14           #reader:Ljava/io/BufferedReader;
    .local v15, reader:Ljava/io/BufferedReader;
    const/4 v9, 0x0

    .local v9, i:I
    :goto_1
    const/16 v17, 0xa

    move/from16 v0, v17

    if-ge v9, v0, :cond_1

    .line 194
    :try_start_2
    invoke-virtual {v15}, Ljava/io/BufferedReader;->readLine()Ljava/lang/String;
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_2
    .catch Ljava/lang/Exception; {:try_start_2 .. :try_end_2} :catch_5

    move-result-object v10

    .local v10, line:Ljava/lang/String;
    if-nez v10, :cond_5

    .line 218
    .end local v10           #line:Ljava/lang/String;
    :cond_1
    if-eqz v7, :cond_2

    .line 219
    :try_start_3
    invoke-virtual {v7}, Ljava/io/FileInputStream;->close()V

    .line 220
    :cond_2
    if-eqz v15, :cond_3

    .line 221
    invoke-virtual {v15}, Ljava/io/BufferedReader;->close()V
    :try_end_3
    .catch Ljava/lang/Exception; {:try_start_3 .. :try_end_3} :catch_3

    :cond_3
    :goto_2
    move-object v6, v7

    .end local v7           #fileStream:Ljava/io/FileInputStream;
    .restart local v6       #fileStream:Ljava/io/FileInputStream;
    move-object v14, v15

    .line 227
    .end local v8           #hashBytes:[B
    .end local v9           #i:I
    .end local v11           #md:Ljava/security/MessageDigest;
    .end local v15           #reader:Ljava/io/BufferedReader;
    .restart local v14       #reader:Ljava/io/BufferedReader;
    :cond_4
    :goto_3
    new-instance v4, Ljava/util/Date;

    invoke-virtual {v13}, Ljava/io/File;->lastModified()J

    move-result-wide v17

    move-wide/from16 v0, v17

    invoke-direct {v4, v0, v1}, Ljava/util/Date;-><init>(J)V

    .line 228
    .local v4, date:Ljava/util/Date;
    invoke-static/range {v16 .. v16}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    move-result v17

    if-eqz v17, :cond_c

    .line 229
    const-string v17, "MMJS Stats: buildDate[%s] MD5[%s] dlDate[%s] Size[%d] Url[%s]"

    const/16 v18, 0x5

    move/from16 v0, v18

    new-array v0, v0, [Ljava/lang/Object;

    move-object/from16 v18, v0

    const/16 v19, 0x0

    aput-object v2, v18, v19

    const/16 v19, 0x1

    aput-object v12, v18, v19

    const/16 v19, 0x2

    aput-object v4, v18, v19

    const/16 v19, 0x3

    invoke-virtual {v13}, Ljava/io/File;->length()J

    move-result-wide v20

    invoke-static/range {v20 .. v21}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v20

    aput-object v20, v18, v19

    const/16 v19, 0x4

    invoke-static/range {p0 .. p0}, Lcom/millennialmedia/android/MRaid;->getPreviousUrl(Landroid/content/Context;)Ljava/lang/String;

    move-result-object v20

    aput-object v20, v18, v19

    invoke-static/range {v17 .. v18}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v17

    goto/16 :goto_0

    .line 196
    .end local v4           #date:Ljava/util/Date;
    .end local v6           #fileStream:Ljava/io/FileInputStream;
    .end local v14           #reader:Ljava/io/BufferedReader;
    .restart local v7       #fileStream:Ljava/io/FileInputStream;
    .restart local v8       #hashBytes:[B
    .restart local v9       #i:I
    .restart local v10       #line:Ljava/lang/String;
    .restart local v11       #md:Ljava/security/MessageDigest;
    .restart local v15       #reader:Ljava/io/BufferedReader;
    :cond_5
    :try_start_4
    invoke-static {v10}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    move-result v17

    if-nez v17, :cond_8

    .line 197
    const-string v17, "* Built"

    move-object/from16 v0, v17

    invoke-virtual {v10, v0}, Ljava/lang/String;->contains(Ljava/lang/CharSequence;)Z

    move-result v17

    if-eqz v17, :cond_6

    invoke-static {v2}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    move-result v17

    if-eqz v17, :cond_6

    .line 199
    move-object v2, v10

    .line 200
    const-string v17, "MRaid"

    new-instance v18, Ljava/lang/StringBuilder;

    invoke-direct/range {v18 .. v18}, Ljava/lang/StringBuilder;-><init>()V

    const-string v19, "MMJS BuildDate:"

    invoke-virtual/range {v18 .. v19}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v18

    move-object/from16 v0, v18

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v18

    invoke-virtual/range {v18 .. v18}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v18

    invoke-static/range {v17 .. v18}, Lcom/millennialmedia/android/MMLog;->d(Ljava/lang/String;Ljava/lang/String;)V

    .line 202
    :cond_6
    const-string v17, "* Version"

    move-object/from16 v0, v17

    invoke-virtual {v10, v0}, Ljava/lang/String;->contains(Ljava/lang/CharSequence;)Z

    move-result v17

    if-eqz v17, :cond_7

    invoke-static/range {v16 .. v16}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    move-result v17

    if-eqz v17, :cond_7

    .line 204
    move-object/from16 v16, v10

    .line 205
    const-string v17, "MRaid"

    new-instance v18, Ljava/lang/StringBuilder;

    invoke-direct/range {v18 .. v18}, Ljava/lang/StringBuilder;-><init>()V

    const-string v19, "MMJS Version:"

    invoke-virtual/range {v18 .. v19}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v18

    move-object/from16 v0, v18

    move-object/from16 v1, v16

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v18

    invoke-virtual/range {v18 .. v18}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v18

    invoke-static/range {v17 .. v18}, Lcom/millennialmedia/android/MMLog;->d(Ljava/lang/String;Ljava/lang/String;)V

    .line 207
    :cond_7
    invoke-static/range {v16 .. v16}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    move-result v17

    if-nez v17, :cond_8

    invoke-static {v2}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_2
    .catch Ljava/lang/Exception; {:try_start_4 .. :try_end_4} :catch_5

    move-result v17

    if-eqz v17, :cond_1

    .line 193
    :cond_8
    add-int/lit8 v9, v9, 0x1

    goto/16 :goto_1

    .line 213
    .end local v3           #contents:[B
    .end local v7           #fileStream:Ljava/io/FileInputStream;
    .end local v8           #hashBytes:[B
    .end local v9           #i:I
    .end local v10           #line:Ljava/lang/String;
    .end local v11           #md:Ljava/security/MessageDigest;
    .end local v15           #reader:Ljava/io/BufferedReader;
    .restart local v6       #fileStream:Ljava/io/FileInputStream;
    .restart local v14       #reader:Ljava/io/BufferedReader;
    :catch_0
    move-exception v5

    .line 214
    .local v5, e:Ljava/lang/Exception;
    :goto_4
    :try_start_5
    const-string v17, "MRaid"

    const-string v18, "MMJS stats exception: "

    move-object/from16 v0, v17

    move-object/from16 v1, v18

    invoke-static {v0, v1, v5}, Lcom/millennialmedia/android/MMLog;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    .line 215
    const/4 v3, 0x0

    .line 218
    .restart local v3       #contents:[B
    if-eqz v6, :cond_9

    .line 219
    :try_start_6
    invoke-virtual {v6}, Ljava/io/FileInputStream;->close()V

    .line 220
    :cond_9
    if-eqz v14, :cond_4

    .line 221
    invoke-virtual {v14}, Ljava/io/BufferedReader;->close()V
    :try_end_6
    .catch Ljava/lang/Exception; {:try_start_6 .. :try_end_6} :catch_1

    goto/16 :goto_3

    .line 222
    :catch_1
    move-exception v5

    .line 223
    const-string v17, "MRaid"

    const-string v18, "Exception closing file: "

    move-object/from16 v0, v17

    move-object/from16 v1, v18

    invoke-static {v0, v1, v5}, Lcom/millennialmedia/android/MMLog;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V

    goto/16 :goto_3

    .line 217
    .end local v3           #contents:[B
    .end local v5           #e:Ljava/lang/Exception;
    :catchall_0
    move-exception v17

    .line 218
    :goto_5
    if-eqz v6, :cond_a

    .line 219
    :try_start_7
    invoke-virtual {v6}, Ljava/io/FileInputStream;->close()V

    .line 220
    :cond_a
    if-eqz v14, :cond_b

    .line 221
    invoke-virtual {v14}, Ljava/io/BufferedReader;->close()V
    :try_end_7
    .catch Ljava/lang/Exception; {:try_start_7 .. :try_end_7} :catch_2

    .line 217
    :cond_b
    :goto_6
    throw v17

    .line 235
    .restart local v3       #contents:[B
    .restart local v4       #date:Ljava/util/Date;
    :cond_c
    const-string v17, "MMJS Stats: Version[%s] buildDate[%s] MD5[%s] dlDate[%s] Size[%d] Url[%s]"

    const/16 v18, 0x6

    move/from16 v0, v18

    new-array v0, v0, [Ljava/lang/Object;

    move-object/from16 v18, v0

    const/16 v19, 0x0

    aput-object v16, v18, v19

    const/16 v19, 0x1

    aput-object v2, v18, v19

    const/16 v19, 0x2

    aput-object v12, v18, v19

    const/16 v19, 0x3

    aput-object v4, v18, v19

    const/16 v19, 0x4

    invoke-virtual {v13}, Ljava/io/File;->length()J

    move-result-wide v20

    invoke-static/range {v20 .. v21}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v20

    aput-object v20, v18, v19

    const/16 v19, 0x5

    invoke-static/range {p0 .. p0}, Lcom/millennialmedia/android/MRaid;->getPreviousUrl(Landroid/content/Context;)Ljava/lang/String;

    move-result-object v20

    aput-object v20, v18, v19

    invoke-static/range {v17 .. v18}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v17

    goto/16 :goto_0

    .line 222
    .end local v3           #contents:[B
    .end local v4           #date:Ljava/util/Date;
    :catch_2
    move-exception v5

    .line 223
    .restart local v5       #e:Ljava/lang/Exception;
    const-string v18, "MRaid"

    const-string v19, "Exception closing file: "

    move-object/from16 v0, v18

    move-object/from16 v1, v19

    invoke-static {v0, v1, v5}, Lcom/millennialmedia/android/MMLog;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V

    goto :goto_6

    .line 222
    .end local v5           #e:Ljava/lang/Exception;
    .end local v6           #fileStream:Ljava/io/FileInputStream;
    .end local v14           #reader:Ljava/io/BufferedReader;
    .restart local v3       #contents:[B
    .restart local v7       #fileStream:Ljava/io/FileInputStream;
    .restart local v8       #hashBytes:[B
    .restart local v9       #i:I
    .restart local v11       #md:Ljava/security/MessageDigest;
    .restart local v15       #reader:Ljava/io/BufferedReader;
    :catch_3
    move-exception v5

    .line 223
    .restart local v5       #e:Ljava/lang/Exception;
    const-string v17, "MRaid"

    const-string v18, "Exception closing file: "

    move-object/from16 v0, v17

    move-object/from16 v1, v18

    invoke-static {v0, v1, v5}, Lcom/millennialmedia/android/MMLog;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V

    goto/16 :goto_2

    .line 217
    .end local v3           #contents:[B
    .end local v5           #e:Ljava/lang/Exception;
    .end local v8           #hashBytes:[B
    .end local v9           #i:I
    .end local v11           #md:Ljava/security/MessageDigest;
    .end local v15           #reader:Ljava/io/BufferedReader;
    .restart local v14       #reader:Ljava/io/BufferedReader;
    :catchall_1
    move-exception v17

    move-object v6, v7

    .end local v7           #fileStream:Ljava/io/FileInputStream;
    .restart local v6       #fileStream:Ljava/io/FileInputStream;
    goto :goto_5

    .end local v6           #fileStream:Ljava/io/FileInputStream;
    .end local v14           #reader:Ljava/io/BufferedReader;
    .restart local v3       #contents:[B
    .restart local v7       #fileStream:Ljava/io/FileInputStream;
    .restart local v8       #hashBytes:[B
    .restart local v9       #i:I
    .restart local v11       #md:Ljava/security/MessageDigest;
    .restart local v15       #reader:Ljava/io/BufferedReader;
    :catchall_2
    move-exception v17

    move-object v6, v7

    .end local v7           #fileStream:Ljava/io/FileInputStream;
    .restart local v6       #fileStream:Ljava/io/FileInputStream;
    move-object v14, v15

    .end local v15           #reader:Ljava/io/BufferedReader;
    .restart local v14       #reader:Ljava/io/BufferedReader;
    goto :goto_5

    .line 213
    .end local v3           #contents:[B
    .end local v6           #fileStream:Ljava/io/FileInputStream;
    .end local v8           #hashBytes:[B
    .end local v9           #i:I
    .end local v11           #md:Ljava/security/MessageDigest;
    .restart local v7       #fileStream:Ljava/io/FileInputStream;
    :catch_4
    move-exception v5

    move-object v6, v7

    .end local v7           #fileStream:Ljava/io/FileInputStream;
    .restart local v6       #fileStream:Ljava/io/FileInputStream;
    goto/16 :goto_4

    .end local v6           #fileStream:Ljava/io/FileInputStream;
    .end local v14           #reader:Ljava/io/BufferedReader;
    .restart local v3       #contents:[B
    .restart local v7       #fileStream:Ljava/io/FileInputStream;
    .restart local v8       #hashBytes:[B
    .restart local v9       #i:I
    .restart local v11       #md:Ljava/security/MessageDigest;
    .restart local v15       #reader:Ljava/io/BufferedReader;
    :catch_5
    move-exception v5

    move-object v6, v7

    .end local v7           #fileStream:Ljava/io/FileInputStream;
    .restart local v6       #fileStream:Ljava/io/FileInputStream;
    move-object v14, v15

    .end local v15           #reader:Ljava/io/BufferedReader;
    .restart local v14       #reader:Ljava/io/BufferedReader;
    goto/16 :goto_4
.end method

.method private static getMRaidJsFile(Landroid/content/Context;)Ljava/io/File;
    .locals 3
    .parameter "context"

    .prologue
    .line 159
    new-instance v0, Ljava/io/File;

    invoke-static {p0}, Lcom/millennialmedia/android/AdCache;->getInternalCacheDirectory(Landroid/content/Context;)Ljava/io/File;

    move-result-object v1

    const-string v2, "mraid.js"

    invoke-direct {v0, v1, v2}, Ljava/io/File;-><init>(Ljava/io/File;Ljava/lang/String;)V

    return-object v0
.end method

.method static getMRaidJsPath(Landroid/content/Context;)Ljava/lang/String;
    .locals 1
    .parameter "context"

    .prologue
    .line 165
    invoke-static {p0}, Lcom/millennialmedia/android/MRaid;->getMRaidJsFile(Landroid/content/Context;)Ljava/io/File;

    move-result-object v0

    invoke-static {v0}, Landroid/net/Uri;->fromFile(Ljava/io/File;)Landroid/net/Uri;

    move-result-object v0

    invoke-virtual {v0}, Landroid/net/Uri;->toString()Ljava/lang/String;

    move-result-object v0

    return-object v0
.end method

.method static getPreviousUrl(Landroid/content/Context;)Ljava/lang/String;
    .locals 4
    .parameter "context"

    .prologue
    .line 304
    const-string v1, ""

    .line 305
    .local v1, previousUrl:Ljava/lang/String;
    if-eqz p0, :cond_0

    .line 306
    const-string v2, "MillennialMediaSettings"

    const/4 v3, 0x0

    invoke-virtual {p0, v2, v3}, Landroid/content/Context;->getSharedPreferences(Ljava/lang/String;I)Landroid/content/SharedPreferences;

    move-result-object v0

    .line 308
    .local v0, prefs:Landroid/content/SharedPreferences;
    const-string v2, "KEY_MMJS_URL"

    const-string v3, ""

    invoke-interface {v0, v2, v3}, Landroid/content/SharedPreferences;->getString(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    .line 310
    .end local v0           #prefs:Landroid/content/SharedPreferences;
    :cond_0
    return-object v1
.end method

.method static hasMraidLocally(Landroid/content/Context;)Z
    .locals 4
    .parameter "context"

    .prologue
    .line 315
    invoke-static {p0}, Lcom/millennialmedia/android/MRaid;->getMRaidJsFile(Landroid/content/Context;)Ljava/io/File;

    move-result-object v0

    .line 316
    .local v0, mmjs:Ljava/io/File;
    if-eqz v0, :cond_0

    .line 317
    const-string v1, "MRaid"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "@@-MMJS File location: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v0}, Ljava/io/File;->getAbsolutePath()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Lcom/millennialmedia/android/MMLog;->d(Ljava/lang/String;Ljava/lang/String;)V

    .line 320
    :cond_0
    if-eqz v0, :cond_1

    invoke-virtual {v0}, Ljava/io/File;->exists()Z

    move-result v1

    if-eqz v1, :cond_1

    const/4 v1, 0x1

    :goto_0
    return v1

    :cond_1
    const/4 v1, 0x0

    goto :goto_0
.end method

.method static injectMraidJs(Landroid/content/Context;Ljava/lang/String;)Ljava/lang/String;
    .locals 7
    .parameter "context"
    .parameter "content"

    .prologue
    const/4 v6, -0x1

    .line 69
    const-string v3, "<script.*src=[\"|\']mraid\\.js[\"|\']"

    invoke-static {v3}, Ljava/util/regex/Pattern;->compile(Ljava/lang/String;)Ljava/util/regex/Pattern;

    move-result-object v2

    .line 70
    .local v2, pattern:Ljava/util/regex/Pattern;
    invoke-virtual {v2, p1}, Ljava/util/regex/Pattern;->matcher(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;

    move-result-object v0

    .line 71
    .local v0, matcher:Ljava/util/regex/Matcher;
    invoke-static {p0}, Lcom/millennialmedia/android/MRaid;->getMRaidJsPath(Landroid/content/Context;)Ljava/lang/String;

    move-result-object v1

    .line 72
    .local v1, mraid:Ljava/lang/String;
    const-string v3, "MRaid"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Mraid path: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-static {p0}, Lcom/millennialmedia/android/MRaid;->getMRaidJsPath(Landroid/content/Context;)Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Lcom/millennialmedia/android/MMLog;->d(Ljava/lang/String;Ljava/lang/String;)V

    .line 73
    invoke-virtual {v0}, Ljava/util/regex/Matcher;->find()Z

    move-result v3

    if-eqz v3, :cond_2

    .line 74
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "<script src=\""

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, "\""

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v0, v3}, Ljava/util/regex/Matcher;->replaceFirst(Ljava/lang/String;)Ljava/lang/String;

    move-result-object p1

    .line 85
    :cond_0
    :goto_0
    const-string v3, "<html>"

    invoke-virtual {p1, v3}, Ljava/lang/String;->indexOf(Ljava/lang/String;)I

    move-result v3

    if-ne v3, v6, :cond_1

    .line 87
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "<html><head></head><body style=\'margin:0;padding:0;\'>"

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, "</body></html>"

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    .line 90
    :cond_1
    return-object p1

    .line 75
    :cond_2
    const-string v3, "<head>"

    invoke-virtual {p1, v3}, Ljava/lang/String;->indexOf(Ljava/lang/String;)I

    move-result v3

    if-ne v3, v6, :cond_3

    .line 76
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "<script src=\""

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, "\"></script>"

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    goto :goto_0

    .line 78
    :cond_3
    const-string v3, "<head>"

    invoke-static {v3}, Ljava/util/regex/Pattern;->compile(Ljava/lang/String;)Ljava/util/regex/Pattern;

    move-result-object v2

    .line 79
    invoke-virtual {v2, p1}, Ljava/util/regex/Pattern;->matcher(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;

    move-result-object v0

    .line 80
    invoke-virtual {v0}, Ljava/util/regex/Matcher;->find()Z

    move-result v3

    if-eqz v3, :cond_0

    .line 81
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "<head><script src=\""

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, "\"></script>"

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v0, v3}, Ljava/util/regex/Matcher;->replaceFirst(Ljava/lang/String;)Ljava/lang/String;

    move-result-object p1

    goto :goto_0
.end method

.method static isMRaidAd(Ljava/lang/String;)Z
    .locals 3
    .parameter "content"

    .prologue
    .line 57
    if-nez p0, :cond_0

    .line 58
    const/4 v2, 0x0

    .line 62
    :goto_0
    return v2

    .line 60
    :cond_0
    const-string v2, "<script.*src=[\"|\']mraid\\.js[\"|\']"

    invoke-static {v2}, Ljava/util/regex/Pattern;->compile(Ljava/lang/String;)Ljava/util/regex/Pattern;

    move-result-object v1

    .line 61
    .local v1, pattern:Ljava/util/regex/Pattern;
    invoke-virtual {v1, p0}, Ljava/util/regex/Pattern;->matcher(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;

    move-result-object v0

    .line 62
    .local v0, matcher:Ljava/util/regex/Matcher;
    invoke-virtual {v0}, Ljava/util/regex/Matcher;->find()Z

    move-result v2

    goto :goto_0
.end method

.method static isMRaidUpdated(Landroid/content/Context;Ljava/lang/String;)Z
    .locals 6
    .parameter "context"
    .parameter "mmjsUrl"

    .prologue
    const/4 v2, 0x1

    .line 281
    invoke-static {p0}, Lcom/millennialmedia/android/MRaid;->hasMraidLocally(Landroid/content/Context;)Z

    move-result v0

    .line 283
    .local v0, hasMraidLocally:Z
    if-nez v0, :cond_2

    const-string v3, "http://cdn.millennialmedia.com/mmjs/v1.4/mm.js"

    invoke-virtual {v3, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_2

    .line 284
    invoke-static {p0, p1}, Lcom/millennialmedia/android/MRaid;->saveIncludedMMJS(Landroid/content/Context;Ljava/lang/String;)Z

    move-result v3

    if-eqz v3, :cond_1

    .line 285
    const-string v3, "MRaid"

    const-string v4, "Using bundled version of mm.js"

    invoke-static {v3, v4}, Lcom/millennialmedia/android/MMLog;->i(Ljava/lang/String;Ljava/lang/String;)V

    .line 299
    :cond_0
    :goto_0
    return v2

    .line 289
    :cond_1
    const-string v3, "MRaid"

    const-string v4, "Unable to save bundled version of mm.js"

    invoke-static {v3, v4}, Lcom/millennialmedia/android/MMLog;->e(Ljava/lang/String;Ljava/lang/String;)V

    .line 292
    :cond_2
    invoke-static {p0}, Lcom/millennialmedia/android/MRaid;->getPreviousUrl(Landroid/content/Context;)Ljava/lang/String;

    move-result-object v1

    .line 293
    .local v1, previousUrl:Ljava/lang/String;
    const-string v3, "MRaid"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Previous mm.js url is <"

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, ">"

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Lcom/millennialmedia/android/MMLog;->d(Ljava/lang/String;Ljava/lang/String;)V

    .line 295
    if-eqz v0, :cond_3

    invoke-virtual {p1, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-nez v3, :cond_0

    .line 299
    :cond_3
    const/4 v2, 0x0

    goto :goto_0
.end method

.method static saveIncludedMMJS(Landroid/content/Context;Ljava/lang/String;)Z
    .locals 7
    .parameter "context"
    .parameter "mmjsUrl"

    .prologue
    const/4 v4, 0x0

    .line 325
    const-string v5, ""

    invoke-static {v5}, Lcom/millennialmedia/android/Base64;->decode(Ljava/lang/String;)[B

    move-result-object v1

    .line 326
    .local v1, mmjsBytesFirst:[B
    const-string v5, ""

    invoke-static {v5}, Lcom/millennialmedia/android/Base64;->decode(Ljava/lang/String;)[B

    move-result-object v2

    .line 327
    .local v2, mmjsBytesSecond:[B
    if-eqz v1, :cond_0

    if-eqz v2, :cond_0

    .line 328
    array-length v5, v1

    array-length v6, v2

    add-int/2addr v5, v6

    new-array v3, v5, [B

    .line 330
    .local v3, mmjsComplete:[B
    array-length v5, v1

    invoke-static {v1, v4, v3, v4, v5}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    .line 332
    array-length v5, v1

    array-length v6, v2

    invoke-static {v2, v4, v3, v5, v6}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    .line 335
    new-instance v0, Ljava/io/ByteArrayInputStream;

    invoke-direct {v0, v3}, Ljava/io/ByteArrayInputStream;-><init>([B)V

    .line 337
    .local v0, byteStream:Ljava/io/ByteArrayInputStream;
    invoke-static {p0, v0}, Lcom/millennialmedia/android/MRaid;->saveMRaid(Landroid/content/Context;Ljava/io/InputStream;)Z

    move-result v5

    if-eqz v5, :cond_0

    invoke-static {p0, p1}, Lcom/millennialmedia/android/MRaid;->storeMraidUrl(Landroid/content/Context;Ljava/lang/String;)Z

    move-result v5

    if-eqz v5, :cond_0

    .line 339
    const/4 v4, 0x1

    .line 343
    .end local v0           #byteStream:Ljava/io/ByteArrayInputStream;
    .end local v3           #mmjsComplete:[B
    :cond_0
    return v4
.end method

.method static saveMRaid(Landroid/content/Context;Ljava/io/InputStream;)Z
    .locals 11
    .parameter "context"
    .parameter "is"

    .prologue
    const/4 v6, 0x1

    const/4 v7, 0x0

    .line 245
    new-instance v2, Ljava/io/File;

    invoke-static {p0}, Lcom/millennialmedia/android/AdCache;->getInternalCacheDirectory(Landroid/content/Context;)Ljava/io/File;

    move-result-object v8

    const-string v9, "mraid.js"

    invoke-direct {v2, v8, v9}, Ljava/io/File;-><init>(Ljava/io/File;Ljava/lang/String;)V

    .line 248
    .local v2, mraidJsFile:Ljava/io/File;
    const-string v8, "MRaid"

    const-string v9, "Saving mraid js to %s"

    new-array v10, v6, [Ljava/lang/Object;

    aput-object v2, v10, v7

    invoke-static {v9, v10}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v9

    invoke-static {v8, v9}, Lcom/millennialmedia/android/MMLog;->v(Ljava/lang/String;Ljava/lang/String;)V

    .line 250
    const/4 v4, 0x0

    .line 252
    .local v4, out:Ljava/io/FileOutputStream;
    :try_start_0
    new-instance v5, Ljava/io/FileOutputStream;

    invoke-direct {v5, v2}, Ljava/io/FileOutputStream;-><init>(Ljava/io/File;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_4

    .line 253
    .end local v4           #out:Ljava/io/FileOutputStream;
    .local v5, out:Ljava/io/FileOutputStream;
    const/16 v8, 0x400

    :try_start_1
    new-array v0, v8, [B

    .line 255
    .local v0, buf:[B
    :goto_0
    invoke-virtual {p1, v0}, Ljava/io/InputStream;->read([B)I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_1} :catch_0

    move-result v3

    .line 256
    .local v3, numread:I
    if-gtz v3, :cond_1

    .line 267
    if-eqz v5, :cond_0

    .line 269
    :try_start_2
    invoke-virtual {v5}, Ljava/io/FileOutputStream;->close()V
    :try_end_2
    .catch Ljava/io/IOException; {:try_start_2 .. :try_end_2} :catch_3

    :cond_0
    :goto_1
    move-object v4, v5

    .line 274
    .end local v0           #buf:[B
    .end local v3           #numread:I
    .end local v5           #out:Ljava/io/FileOutputStream;
    .restart local v4       #out:Ljava/io/FileOutputStream;
    :goto_2
    return v6

    .line 258
    .end local v4           #out:Ljava/io/FileOutputStream;
    .restart local v0       #buf:[B
    .restart local v3       #numread:I
    .restart local v5       #out:Ljava/io/FileOutputStream;
    :cond_1
    const/4 v8, 0x0

    :try_start_3
    invoke-virtual {v5, v0, v8, v3}, Ljava/io/FileOutputStream;->write([BII)V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1
    .catch Ljava/lang/Exception; {:try_start_3 .. :try_end_3} :catch_0

    goto :goto_0

    .line 261
    .end local v0           #buf:[B
    .end local v3           #numread:I
    :catch_0
    move-exception v1

    move-object v4, v5

    .line 262
    .end local v5           #out:Ljava/io/FileOutputStream;
    .local v1, e:Ljava/lang/Exception;
    .restart local v4       #out:Ljava/io/FileOutputStream;
    :goto_3
    if-eqz v2, :cond_2

    .line 263
    :try_start_4
    invoke-virtual {v2}, Ljava/io/File;->delete()Z

    .line 264
    :cond_2
    const-string v6, "MRaid"

    const-string v8, "Exception downloading component mraid.js: "

    invoke-static {v6, v8, v1}, Lcom/millennialmedia/android/MMLog;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    .line 267
    if-eqz v4, :cond_3

    .line 269
    :try_start_5
    invoke-virtual {v4}, Ljava/io/FileOutputStream;->close()V
    :try_end_5
    .catch Ljava/io/IOException; {:try_start_5 .. :try_end_5} :catch_2

    .end local v1           #e:Ljava/lang/Exception;
    :cond_3
    :goto_4
    move v6, v7

    .line 265
    goto :goto_2

    .line 267
    :catchall_0
    move-exception v6

    :goto_5
    if-eqz v4, :cond_4

    .line 269
    :try_start_6
    invoke-virtual {v4}, Ljava/io/FileOutputStream;->close()V
    :try_end_6
    .catch Ljava/io/IOException; {:try_start_6 .. :try_end_6} :catch_1

    .line 267
    :cond_4
    :goto_6
    throw v6

    .line 270
    :catch_1
    move-exception v1

    .line 271
    .local v1, e:Ljava/io/IOException;
    const-string v7, "MRaid"

    const-string v8, "Exception closing file: "

    invoke-static {v7, v8, v1}, Lcom/millennialmedia/android/MMLog;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V

    goto :goto_6

    .line 270
    .local v1, e:Ljava/lang/Exception;
    :catch_2
    move-exception v1

    .line 271
    .local v1, e:Ljava/io/IOException;
    const-string v6, "MRaid"

    const-string v8, "Exception closing file: "

    invoke-static {v6, v8, v1}, Lcom/millennialmedia/android/MMLog;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V

    goto :goto_4

    .line 270
    .end local v1           #e:Ljava/io/IOException;
    .end local v4           #out:Ljava/io/FileOutputStream;
    .restart local v0       #buf:[B
    .restart local v3       #numread:I
    .restart local v5       #out:Ljava/io/FileOutputStream;
    :catch_3
    move-exception v1

    .line 271
    .restart local v1       #e:Ljava/io/IOException;
    const-string v7, "MRaid"

    const-string v8, "Exception closing file: "

    invoke-static {v7, v8, v1}, Lcom/millennialmedia/android/MMLog;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V

    goto :goto_1

    .line 267
    .end local v0           #buf:[B
    .end local v1           #e:Ljava/io/IOException;
    .end local v3           #numread:I
    :catchall_1
    move-exception v6

    move-object v4, v5

    .end local v5           #out:Ljava/io/FileOutputStream;
    .restart local v4       #out:Ljava/io/FileOutputStream;
    goto :goto_5

    .line 261
    :catch_4
    move-exception v1

    goto :goto_3
.end method

.method static setCallbackRef(Lcom/millennialmedia/android/MRaid$Finished;)V
    .locals 1
    .parameter "callback"

    .prologue
    .line 102
    new-instance v0, Ljava/lang/ref/WeakReference;

    invoke-direct {v0, p0}, Ljava/lang/ref/WeakReference;-><init>(Ljava/lang/Object;)V

    sput-object v0, Lcom/millennialmedia/android/MRaid;->finishedRef:Ljava/lang/ref/WeakReference;

    .line 103
    return-void
.end method

.method static storeMraidUrl(Landroid/content/Context;Ljava/lang/String;)Z
    .locals 4
    .parameter "context"
    .parameter "url"

    .prologue
    const/4 v2, 0x0

    .line 146
    invoke-static {p1}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    move-result v3

    if-nez v3, :cond_0

    .line 147
    const-string v3, "MillennialMediaSettings"

    invoke-virtual {p0, v3, v2}, Landroid/content/Context;->getSharedPreferences(Ljava/lang/String;I)Landroid/content/SharedPreferences;

    move-result-object v1

    .line 149
    .local v1, prefs:Landroid/content/SharedPreferences;
    invoke-interface {v1}, Landroid/content/SharedPreferences;->edit()Landroid/content/SharedPreferences$Editor;

    move-result-object v0

    .line 150
    .local v0, editor:Landroid/content/SharedPreferences$Editor;
    const-string v2, "KEY_MMJS_URL"

    invoke-interface {v0, v2, p1}, Landroid/content/SharedPreferences$Editor;->putString(Ljava/lang/String;Ljava/lang/String;)Landroid/content/SharedPreferences$Editor;

    .line 151
    invoke-interface {v0}, Landroid/content/SharedPreferences$Editor;->commit()Z

    .line 152
    const/4 v2, 0x1

    .line 154
    .end local v0           #editor:Landroid/content/SharedPreferences$Editor;
    .end local v1           #prefs:Landroid/content/SharedPreferences;
    :cond_0
    return v2
.end method
